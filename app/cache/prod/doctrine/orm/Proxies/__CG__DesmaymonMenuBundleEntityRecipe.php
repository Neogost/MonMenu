<?php

namespace Proxies\__CG__\Desmay\monMenuBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Recipe extends \Desmay\monMenuBundle\Entity\Recipe implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idrecipe', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idbudget', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idtype', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'shortdescription', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'description', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'link', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'imagepath', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbpeople', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbvote', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nblike', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbdislike', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'dificult', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'iduser', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'archive');
        }

        return array('__isInitialized__', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idrecipe', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idbudget', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'idtype', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'shortdescription', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'description', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'link', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'imagepath', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbpeople', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbvote', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nblike', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'nbdislike', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'dificult', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'iduser', '' . "\0" . 'Desmay\\monMenuBundle\\Entity\\Recipe' . "\0" . 'archive');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Recipe $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdrecipe()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdrecipe();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdrecipe', array());

        return parent::getIdrecipe();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdbudget($idbudget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdbudget', array($idbudget));

        return parent::setIdbudget($idbudget);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdbudget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdbudget', array());

        return parent::getIdbudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdtype($idtype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdtype', array($idtype));

        return parent::setIdtype($idtype);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdtype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdtype', array());

        return parent::getIdtype();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortdescription($shortdescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortdescription', array($shortdescription));

        return parent::setShortdescription($shortdescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortdescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortdescription', array());

        return parent::getShortdescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink($link)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', array($link));

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', array());

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setImagepath($imagepath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImagepath', array($imagepath));

        return parent::setImagepath($imagepath);
    }

    /**
     * {@inheritDoc}
     */
    public function getImagepath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagepath', array());

        return parent::getImagepath();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbpeople($nbpeople)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbpeople', array($nbpeople));

        return parent::setNbpeople($nbpeople);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbpeople()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbpeople', array());

        return parent::getNbpeople();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbvote($nbvote)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbvote', array($nbvote));

        return parent::setNbvote($nbvote);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbvote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbvote', array());

        return parent::getNbvote();
    }

    /**
     * {@inheritDoc}
     */
    public function setNblike($nblike)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNblike', array($nblike));

        return parent::setNblike($nblike);
    }

    /**
     * {@inheritDoc}
     */
    public function getNblike()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNblike', array());

        return parent::getNblike();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbdislike($nbdislike)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbdislike', array($nbdislike));

        return parent::setNbdislike($nbdislike);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbdislike()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbdislike', array());

        return parent::getNbdislike();
    }

    /**
     * {@inheritDoc}
     */
    public function setDificult($dificult)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDificult', array($dificult));

        return parent::setDificult($dificult);
    }

    /**
     * {@inheritDoc}
     */
    public function getDificult()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDificult', array());

        return parent::getDificult();
    }

    /**
     * {@inheritDoc}
     */
    public function setIduser($iduser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIduser', array($iduser));

        return parent::setIduser($iduser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIduser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIduser', array());

        return parent::getIduser();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchive($archive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchive', array($archive));

        return parent::setArchive($archive);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchive', array());

        return parent::getArchive();
    }

}
